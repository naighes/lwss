service: cart
provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: us-east-1
  environment:
    CART_TABLE_NAME: "cart-${self:provider.stage}"
    ORDER_TABLE_NAME: "order-${self:provider.stage}"
  iamRoleStatements:
    $ref: ./resources/lambda-policy.json
  apiKeys:
    - ${self:service}-${self:provider.stage}-api-key

functions:
  createCart:
    handler: cart/cart.create
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: carts
          method: post
          cors: true
          private: true
  deleteCart:
    handler: cart/cart.delete
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: carts/{id}
          method: delete
          cors: true
          private: true
  addRowToCart:
    handler: cart/cart.add
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: carts/{id}/rows/{item_id}
          method: put
          cors: true
          private: true
  removeRowFromCart:
    handler: cart/cart.remove
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: carts/{id}/rows/{item_id}
          method: delete
          cors: true
          private: true
  getCart:
    handler: cart/cart.get
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: carts/{id}
          method: get
          cors: true
          private: true
  createOrder:
    handler: cart/order.create
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: orders
          method: post
          cors: true
          private: true

resources:
  Resources:
    Cart:
      $ref: ./resources/cart_table.json
    Order:
      $ref: ./resources/order_table.json
